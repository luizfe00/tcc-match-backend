// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Student {
  id String @id @default(uuid())
  name String
  email String @unique
  enrollment String @unique

  paper Paper?
  themes Theme[]

  Interest Interest[]
}

model Professor {
  id String @id @default(uuid())
  name String
  email String @unique
  enrollment String @unique
  classes String
  vacancies Int
  role Role @default(TEACHER)

  papers Paper[]
  themes Theme[]
  interests Interest[]
}

model Theme {
  id String @id @default(uuid())
  label String @unique
  keepActive Boolean? @default(false)
  studentId String?
  professorId String?

  student Student? @relation(fields: [studentId], references: [id])
  professor Professor? @relation(fields: [professorId], references: [id])
  papers Paper[]
  interests Interest[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime? 
}

model Interest {
  id String @id @default(uuid())
  text String

  themeId String
  studentId String?
  professorId String?

  theme Theme @relation(fields: [themeId], references: [id])
  student Student? @relation(fields: [studentId], references: [id])
  professor Professor? @relation(fields: [professorId], references: [id])

  createdAt DateTime @default(now())
}

model Paper {
  id String @id @default(uuid())
  studentId String @unique
  professorId String
  themeId String
  approved Boolean @default(false)
  
  theme Theme @relation(fields: [themeId], references: [id])
  student Student @relation(fields: [studentId], references: [id])
  professor Professor @relation(fields: [professorId], references: [id])
  stages Stage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime? 
}

model Stage {
  id String @id @default(uuid())
  label String

  paperId String 
  paper Paper @relation(fields: [paperId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  TEACHER
  COORDINATOR
}